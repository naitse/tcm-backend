<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc"
	xmlns:cors="http://www.mulesoft.org/schema/mule/cors" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/cors http://www.mulesoft.org/schema/mule/cors/current/mule-cors.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
    <flow name="getTcsForStuitesByProject" doc:name="getTcsForStuitesByProject">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" path="getTcsForStuitesByProject" doc:name="getTcsForStuitesByProject"/>
        <cors:filter config-ref="tcm-cors"/>
        <flow-ref name="validate_api_key" doc:name="Flow Reference"/>
		<set-variable doc:name="projectId" value="#[message.inboundProperties['http.query.params']['projectId']]" variableName="projectId"/>
		<set-variable doc:name="label" value="#[message.inboundProperties['http.query.params']['label']]" variableName="label"/>
		<flow-ref name="subgetTcsForStuitesByProject" doc:name="Flow Reference"/>
    </flow>
    <flow name="subgetTcsForStuitesByProject" doc:name="subgetTcsForStuitesByProject" processingStrategy="synchronous">
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy"><![CDATA[def labels = flowVars['label'].split(',');
def select = "Select id tcId, name, description, proposed from (";

for (i=0;i< labels.length; i++){
    
    select += "SELECT T.id, T.name, T.description, T.proposed from tcs T inner join tcs_suites TS on T.id = TS.tcId inner join projects_suites PS on PS.suiteId = TS.suiteId inner join suites S ON S.id = PS.suiteId   where PS.projectId = "+flowVars['projectId']+" and T.carried_over = 0 and S.id = "+labels[i]
    
    if (i < (labels.length - 1)){
        select += " UNION ALL "
    }

}

select += ") AS tagsTempResult group by id, name, description, proposed;"

return select;]]></scripting:script>
        </scripting:component>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
		
       	<jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="test" queryTimeout="-1" connector-ref="Database" doc:name="Database">
            <jdbc-ee:query key="test" value="CALL getTcsForStuitesByProject(#[payload])"/>
            <jdbc-ee:query key="tagQuery" value="SELECT T.id, T.name, T.description, T.proposed  from tcs T inner join tcs_suites TS on T.id = TS.tcId inner join projects_suites PS on PS.suiteId = TS.suiteId inner join suites S ON S.id = PS.suiteId where PS.projectId = #[flowVars['projectId']]  and T.carried_over = 0 and S.id in (#[groovy:message.getInvocationProperty('label')]) group by T.id, T.name, T.description, T.proposed;"/>
        </jdbc-ee:outbound-endpoint>
        <set-payload value="#[payload.resultset1]" doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        
    </flow>
    
    <flow name="getSuitesforTc" doc:name="getSuitesforTc">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" path="getSuitesforTc" doc:name="getSuitesforTc"/>
        <cors:filter config-ref="tcm-cors"/>
        <flow-ref name="validate_api_key" doc:name="Flow Reference"/>
        <set-variable doc:name="Variable" value="#[message.inboundProperties['http.query.params']['tcId']]" variableName="tcId"/>
        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="getSuitesforTc" queryTimeout="-1" connector-ref="Database" doc:name="Database">
            <jdbc-ee:query key="getSuitesforTc" value="CALL getSuitesforTc(#[flowVars['tcId']])"/>
        </jdbc-ee:outbound-endpoint>
        <set-payload value="#[payload.resultset1]" doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
    <flow name="removeSuitesforTc" doc:name="removeSuitesforTc">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" path="removeSuitesforTc" doc:name="removeSuitesforTc"/>
        <cors:filter config-ref="tcm-cors"/>
        <flow-ref name="validate_api_key" doc:name="Flow Reference"/>
        <set-variable doc:name="Variable" value="#[message.inboundProperties['http.query.params']['tcId']]" variableName="tcId"/>
        <set-variable doc:name="Variable" value="#[message.inboundProperties['http.query.params']['label']]" variableName="label"/>
        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="removeSuitesforTc" queryTimeout="-1" connector-ref="Database" doc:name="Database">
            <jdbc-ee:query key="removeSuitesforTc" value="CALL removeSuitesforTc(#[flowVars['tcId']],#[flowVars['label']])"/>
        </jdbc-ee:outbound-endpoint>
    </flow>
    <flow name="insertSuitesforTc" doc:name="insertSuitesforTc">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" path="insertSuitesforTc" doc:name="insertSuitesforTc"/>
        <cors:filter config-ref="tcm-cors"/>
        <flow-ref name="validate_api_key" doc:name="Flow Reference"/>
        <set-variable doc:name="Variable" value="#[message.inboundProperties['http.query.params']['tcId']]" variableName="tcId"/>
        <set-variable doc:name="Variable" value="#[message.inboundProperties['http.query.params']['label']]" variableName="label"/>
        <set-variable doc:name="Variable" value="#[message.inboundProperties['http.query.params']['projectId']]" variableName="projectId"/>
        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="removeSuitesforTc" queryTimeout="-1" connector-ref="Database" doc:name="Database">
            <jdbc-ee:query key="removeSuitesforTc" value="CALL insertNewTag(#[flowVars['tcId']],#[flowVars['label']],#[flowVars['projectId']])"/>
        </jdbc-ee:outbound-endpoint>
    </flow>
    <flow name="addSuite" doc:name="addSuite">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" path="addSuite" doc:name="addSuite"/>
        <cors:filter config-ref="tcm-cors"/>
        <flow-ref name="validate_api_key" doc:name="Flow Reference"/>
        <set-variable doc:name="Variable" value="#[message.inboundProperties['http.query.params']['label']]" variableName="label"/>
        <set-variable doc:name="Variable" value="#[message.inboundProperties['http.query.params']['projectId']]" variableName="projectId"/>
        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="addSuite" queryTimeout="-1" connector-ref="Database" doc:name="Database">
            <jdbc-ee:query key="addSuite" value="CALL addSuite(#[flowVars['label']],#[flowVars['projectId']])"/>
        </jdbc-ee:outbound-endpoint>
        <set-payload value="#[payload.resultset1]" doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
    <flow name="removeSuite" doc:name="removeSuite">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" path="removeSuite" doc:name="addSuite"/>
        <cors:filter config-ref="tcm-cors"/>
        <flow-ref name="validate_api_key" doc:name="Flow Reference"/>
        <set-variable doc:name="Variable" value="#[message.inboundProperties['http.query.params']['suiteId']]" variableName="suiteId"/>
        <set-variable doc:name="Variable" value="#[message.inboundProperties['http.query.params']['projectId']]" variableName="projectId"/>
        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="removeSuite" queryTimeout="-1" connector-ref="Database" doc:name="Database">
            <jdbc-ee:query key="removeSuite" value="CALL removeSuite(#[flowVars['suiteId']],#[flowVars['projectId']])"/>
        </jdbc-ee:outbound-endpoint>
        <set-payload value="#[payload.resultset1]" doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
    <flow name="getSuites" doc:name="getSuites" >
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" path="getSuites" doc:name="HTTP"/>
        <cors:filter config-ref="tcm-cors"/>
        <flow-ref name="validate_api_key" doc:name="Flow Reference"/>
		<set-variable doc:name="projectId" value="#[message.inboundProperties['http.query.params']['projectId']]" variableName="projectId"/>
        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="getSuites" queryTimeout="-1" connector-ref="Database" doc:name="Database">
			<jdbc-ee:query key="getSuites" value="CALL getSuites(#[flowVars['projectId']], #[message.inboundProperties['http.query.params']['interop']])"/>
        </jdbc-ee:outbound-endpoint>
        <set-payload value="#[payload.resultset1]" doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
        <flow name="createTestCaseForSuite" doc:name="createTestCaseForSuite" >
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" path="createTestCaseForSuite" doc:name="HTTP"/>
        <cors:filter config-ref="tcm-cors"/>
        <flow-ref name="validate_api_key" doc:name="Flow Reference"/>
		<set-variable doc:name="suiteId" value="#[message.inboundProperties['http.query.params']['suiteId']]" variableName="suiteId"/>
        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="createTestCaseForSuite" queryTimeout="-1" connector-ref="Database" doc:name="Database">
			<jdbc-ee:query key="createTestCaseForSuite" value="CALL createTestCaseForSuite(#[variable:suiteId], #[json:name], #[json:description], #[json:proposed])"/>
        </jdbc-ee:outbound-endpoint>
        <set-payload value="#[payload.resultset1]" doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
    
    <flow name="deleteTestCaseSuite" doc:name="deleteTestCaseSuite">
    	<http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" path="deleteTestCaseSuite" doc:name="HTTP"/>
        <cors:filter config-ref="tcm-cors"/>
        <flow-ref name="validate_api_key" doc:name="Flow Reference"/>
        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="deleteTestCaseSuite" queryTimeout="-1" connector-ref="Database" doc:name="Database">
            <jdbc-ee:query key="deleteTestCaseSuite" value="CALL deleteTestCase(#[message.inboundProperties['http.query.params']['tcId']])"/>
        </jdbc-ee:outbound-endpoint>
        <set-payload value="true" doc:name="Set Payload"/>
    </flow>
    
    <flow name="instanceSuite" doc:name="instanceSuite">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" path="instanceSuite" doc:name="HTTP"/>
        <cors:filter config-ref="tcm-cors"/>
    	<flow-ref name="validate_api_key" doc:name="Flow Reference"/>
   		<jdbc-ee:outbound-endpoint exchange-pattern="request-response"  queryKey="instanceSuite" queryTimeout="-1"  connector-ref="Database" doc:name="Database">
            <jdbc-ee:query key="instanceSuite" value="CALL instanceSuite(#[json:iterationId],#[json:suiteId])"/>
        </jdbc-ee:outbound-endpoint>
        <set-variable value="#[payload.resultset1.get(0).featureId]" variableName="featuresMemberId" doc:name="Variable" />
        <logger message="NEW FEATURE #[flowVars['featuresMemberId']]" level="INFO" doc:name="Logger"/>
        <set-payload value="true" doc:name="Set Payload"/>
   </flow>
    
</mule>
